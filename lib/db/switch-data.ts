import { randomUUID } from 'crypto';
import type { 
    AccessControl, 
    AccessControlNode,
    SipProfileFull,
    SipProfileDomainFull,
    SipProfileSettingFull
 } from './types';

 import { 
    ACCESS_CONTROL_DEFAULTS, 
    ACCESS_CONTROL_NODE_DEFAULTS,
    SIP_PROFILE_DEFAULTS,
    SIP_PROFILE_DOMAIN_DEFAULTS,
    SIP_PROFILE_SETTING_DEFAULTS, 
} from './types';


export const defaultAccessControls: Omit<AccessControl, 'pbx_access_control_nodes'>[] = [
    {
        id: randomUUID(),
        name: 'domains',
        default: 'deny',
        description: null,
        synchronised: new Date(),
        ...ACCESS_CONTROL_DEFAULTS,
    },
    {
        id: randomUUID(),
        name: 'lan',
        default: 'deny',
        description: null,
        synchronised: new Date(),
        ...ACCESS_CONTROL_DEFAULTS,
    }
];


export const defaultAccessControlNodes: Omit<AccessControlNode, 'pbx_access_control'>[] = [
    {
        id: randomUUID(),
        access_control_id_id: defaultAccessControls[1].id,
        type: 'allow',
        cidr: '192.168.42.42/32',
        domain: null,
        description: null,
        synchronised: new Date(),
        ...ACCESS_CONTROL_NODE_DEFAULTS,

    },
    {
        id: randomUUID(),
        access_control_id_id: defaultAccessControls[1].id,
        type: 'allow',
        cidr: '192.168.65.9/32',
        domain: null,
        description: null,
        synchronised: new Date(),
        ...ACCESS_CONTROL_NODE_DEFAULTS,

    },
    {
        id: randomUUID(),
        access_control_id_id: defaultAccessControls[1].id,
        type: 'allow',
        cidr: '127.0.0.1/32',
        domain: null,
        description: 'Allow FreeSWITCH self-registration',
        synchronised: new Date(),
        ...ACCESS_CONTROL_NODE_DEFAULTS,
    },
    {
        id: randomUUID(),
        access_control_id_id: defaultAccessControls[1].id,
        type: 'allow',
        cidr: '10.162.0.53/32',
        domain: null,
        description: 'Allow FreeSWITCH self-registration',
        synchronised: new Date(),
        ...ACCESS_CONTROL_NODE_DEFAULTS,
    },
    {
        id: randomUUID(),
        access_control_id_id: defaultAccessControls[0].id,
        type: 'allow',
        cidr: '127.0.0.1/32',
        domain: null,
        description: 'Allow FreeSWITCH self-registration',
        synchronised: new Date(),
        ...ACCESS_CONTROL_NODE_DEFAULTS,
    },
    {
        id: randomUUID(),
        access_control_id_id: defaultAccessControls[0].id,
        type: 'allow',
        cidr: '192.168.65.9/32',
        domain: null,
        description: 'Allow FreeSWITCH self-registration',
        synchronised: new Date(),
        ...ACCESS_CONTROL_NODE_DEFAULTS,
    },
    {
        id: randomUUID(),
        access_control_id_id: defaultAccessControls[0].id,
        type: 'allow',
        cidr: '10.162.0.53/32',
        domain: null,
        description: 'Allow FreeSWITCH self-registration',
        synchronised: new Date(),
        ...ACCESS_CONTROL_NODE_DEFAULTS,
    },
];

export const defaultSipProfiles = [
    {
        id: randomUUID(),
        name: 'internal',
        hostname: null,
        disabled: false,
        description: 'The Internal profile by default requires registration which is used by the endpoints. By default the Internal profile binds to port 5060.',
        synchronised: new Date(),
        ...SIP_PROFILE_DEFAULTS,
    },
    {
        id: randomUUID(),
        name: 'external',
        hostname: null,
        disabled: false,
        description: 'The External profile external provides anonymous calling in the public context. By default the External profile binds to port 5080. Calls can be sent using a SIP URL:voip.domain.com:5080',
        synchronised: new Date(),
        ...SIP_PROFILE_DEFAULTS,
    },
    {
        id: randomUUID(),
        name: 'internal-ipv6',
        hostname: null,
        disabled: true,
        description: 'The Internal IPV6 profile binds to the IP version 6 address and is similar to the Internal profile.',
        synchronised: new Date(),
        ...SIP_PROFILE_DEFAULTS,
    },
    {
        id: randomUUID(),
        name: 'external-ipv6',
        hostname: null,
        disabled: true,
        description: 'The External IPV6 profile binds to the IP version 6 address and is similar to the External profile.',
        synchronised: new Date(),
        ...SIP_PROFILE_DEFAULTS,
    }
];

export const defaultSipProfileDomains = defaultSipProfiles.map(profile => ({
    id: randomUUID(),
    sip_profile_id: profile.id,
    name: 'all',
    alias: 'false',
    parse: profile.name.startsWith('external') ? 'false' : 'true',
    synchronised: new Date(),
    ...SIP_PROFILE_DOMAIN_DEFAULTS,
}));

// Define all possible SIP profile settings with default values and disabled status
const allSipSettings = [
    // Add all setting names here with a default value and disabled: true
    // The overrides below will enable and set the correct values per profile.
    { name: 'accept-blind-auth', value: 'false', disabled: true },
    { name: 'accept-blind-reg', value: 'false', disabled: true },
    { name: 'aggressive-nat-detection', value: 'false', disabled: true },
    { name: 'alias', value: '', disabled: true },
    { name: 'apply-inbound-acl', value: 'lan', disabled: true },
    { name: 'apply-nat-acl', value: 'nat.auto', disabled: true },
    { name: 'apply-register-acl', value: 'lan', disabled: true },
    { name: 'auth-all-packets', value: 'false', disabled: true },
    { name: 'auth-calls', value: 'false', disabled: true },
    { name: 'auth-subscriptions', value: 'false', disabled: true },
    { name: 'auto-jitterbuffer-msec', value: '60', disabled: true },
    { name: 'bind-params', value: 'transport=udp', disabled: true },
    { name: 'bitpacking', value: 'aal2', disabled: true },
    { name: 'caller-id-type', value: 'auto', disabled: true },
    { name: 'challenge-realm', value: 'auto_from', disabled: true },
    { name: 'cid-in-1xx', value: 'false', disabled: true },
    { name: 'context', value: 'public', disabled: true },
    { name: 'dbname', value: 'share_presence', disabled: true },
    { name: 'debug', value: '0', disabled: true },
    { name: 'delete-subs-on-register', value: 'false', disabled: true },
    { name: 'dialplan', value: 'XML', disabled: true },
    { name: 'disable-naptr', value: 'false', disabled: true },
    { name: 'disable-register', value: 'true', disabled: true },
    { name: 'disable-rtp-auto-adjust', value: 'true', disabled: true },
    { name: 'disable-srv', value: 'false', disabled: true },
    { name: 'disable-srv503', value: 'false', disabled: true },
    { name: 'disable-transcoding', value: 'false', disabled: true },
    { name: 'disable-transfer', value: 'false', disabled: true },
    { name: 'dtmf-duration', value: '2000', disabled: true },
    { name: 'dtmf-type', value: 'rfc2833', disabled: true },
    { name: 'enable-100rel', value: 'false', disabled: true },
    { name: 'enable-3pcc', value: 'false', disabled: true },
    { name: 'enable-compact-headers', value: 'false', disabled: true },
    { name: 'enable-rfc-5626', value: 'false', disabled: true },
    { name: 'ext-rtp-ip', value: 'auto-nat', disabled: true },
    { name: 'ext-sip-ip', value: 'auto-nat', disabled: true },
    { name: 'force-register-db-domain', value: '$${domain}', disabled: true },
    { name: 'force-register-domain', value: '$${domain}', disabled: true },
    { name: 'force-subscription-domain', value: '$${domain}', disabled: true },
    { name: 'force-subscription-expires', value: '600', disabled: true },
    { name: 'forward-unsolicited-mwi-notify', value: 'false', disabled: true },
    { name: 'hold-music', value: '$${hold_music}', disabled: true },
    { name: 'inbound-codec-negotiation', value: 'generous', disabled: true },
    { name: 'inbound-codec-prefs', value: '$${global_codec_prefs}', disabled: true },
    { name: 'inbound-late-negotiation', value: 'false', disabled: true },
    { name: 'inbound-proxy-media', value: 'false', disabled: true },
    { name: 'inbound-reg-force-matching-username', value: 'false', disabled: true },
    { name: 'liberal-dtmf', value: 'false', disabled: true },
    { name: 'local-network-acl', value: 'localnet.auto', disabled: true },
    { name: 'log-auth-failures', value: 'false', disabled: true },
    { name: 'manage-presence', value: 'false', disabled: true },
    { name: 'manage-shared-appearance', value: 'false', disabled: true },
    { name: 'manual-redirect', value: 'false', disabled: true },
    { name: 'max-proceeding', value: '1000', disabled: true },
    { name: 'media-option', value: '', disabled: true },
    { name: 'minimum-session-expires', value: '120', disabled: true },
    { name: 'multiple-registrations', value: 'contact', disabled: true },
    { name: 'nat-options-ping', value: 'false', disabled: true },
    { name: 'NDLB-broken-auth-hash', value: 'true', disabled: true },
    { name: 'NDLB-received-in-nat-reg-contact', value: 'true', disabled: true },
    { name: 'NDLB-force-rport', value: 'safe', disabled: false },
    { name: 'nonce-count', value: '64', disabled: true },
    { name: 'nonce-ttl', value: '60', disabled: true },
    { name: 'odbc-dsn', value: '$${dsn}', disabled: true },
    { name: 'outbound-codec-prefs', value: '$${global_codec_prefs}', disabled: true },
    { name: 'pass-callee-id', value: 'false', disabled: true },
    { name: 'pass-rfc2833', value: 'false', disabled: true },
    { name: 'presence-hosts', value: '$${domain}', disabled: true },
    { name: 'presence-privacy', value: '$${presence_privacy}', disabled: true },
    { name: 'record-path', value: '$${recordings_dir}', disabled: true },
    { name: 'record-template', value: '', disabled: true },
    { name: 'renegotiate-codec-on-hold', value: 'false', disabled: true },
    { name: 'registration-thread-frequency', value: '30', disabled: true },
    { name: 'rfc2833-pt', value: '101', disabled: true },
    { name: 'rtcp-audio-interval-msec', value: '5000', disabled: true },
    { name: 'rtcp-video-interval-msec', value: '5000', disabled: true },
    { name: 'rtp-autofix-timing', value: 'false', disabled: true },
    { name: 'rtp-autoflush-during-bridge', value: 'false', disabled: true },
    { name: 'rtp-hold-timeout-sec', value: '1800', disabled: true },
    { name: 'rtp-ip', value: '$${local_ip_v4}', disabled: true },
    { name: 'rtp-rewrite-timestamps', value: 'true', disabled: true },
    { name: 'rtp-timeout-sec', value: '300', disabled: true },
    { name: 'rtp-timer-name', value: 'soft', disabled: true },
    { name: 'send-message-query-on-register', value: 'false', disabled: true },
    { name: 'send-presence-on-register', value: 'false', disabled: true },
    { name: 'session-timeout', value: '1800', disabled: true },
    { name: 'shutdown-on-fail', value: 'false', disabled: true },
    { name: 'sip-capture', value: 'no', disabled: true },
    { name: 'sip-expires-max-deviation', value: '120', disabled: true },
    { name: 'sip-force-expires', value: '1800', disabled: true },
    { name: 'sip-ip', value: '$${local_ip_v4}', disabled: true },
    { name: 'sip-port', value: '5060', disabled: true },
    { name: 'sip-trace', value: 'no', disabled: true },
    { name: 'stun-auto-disable', value: 'false', disabled: true },
    { name: 'stun-enabled', value: 'false', disabled: true },
    { name: 'suppress-cng', value: 'false', disabled: true },
    { name: 'timer-T1', value: '500', disabled: true },
    { name: 'timer-T1X64', value: '32000', disabled: true },
    { name: 'timer-T2', value: '4000', disabled: true },
    { name: 'timer-T4', value: '4000', disabled: true },
    { name: 'tls', value: 'false', disabled: true },
    { name: 'tls-bind-params', value: 'transport=tls', disabled: true },
    { name: 'tls-cert-dir', value: '$${conf_dir}/tls', disabled: true },
    { name: 'tls-only', value: 'false', disabled: true },
    { name: 'tls-passphrase', value: '', disabled: true },
    { name: 'tls-sip-port', value: '5061', disabled: true },
    { name: 'tls-verify-date', value: 'true', disabled: true },
    { name: 'tls-verify-depth', value: '2', disabled: true },
    { name: 'tls-verify-in-subjects', value: '', disabled: true },
    { name: 'tls-verify-policy', value: 'none', disabled: true },
    { name: 'tls-version', value: 'tlsv1,tlsv1.1,tlsv1.2', disabled: true },
    { name: 'track-calls', value: 'false', disabled: true },
    { name: 'unregister-on-options-fail', value: 'false', disabled: true },
    { name: 'use-rtp-timer', value: 'true', disabled: true },
    { name: 'user-agent-string', value: 'FreeSWITCH', disabled: true },
    { name: 'username', value: 'freeswitch', disabled: true },
    { name: 'vad', value: 'in', disabled: true },
    { name: 'watchdog-enabled', value: 'no', disabled: true },
    { name: 'watchdog-event-timeout', value: '30000', disabled: true },
    { name: 'watchdog-step-timeout', value: '30000', disabled: true }, // Added
    { name: 'ws-binding', value: ':5066', disabled: true },
    { name: 'wss-binding', value: ':7443', disabled: true },
    { name: 'zrtp-passthru', value: 'false', disabled: true },
];

// Overrides for internal profiles
const internalOverrides: { [key: string]: Partial<typeof allSipSettings[0]> } = {
    'rtcp-audio-interval-msec': { value: '5000', disabled: false },
    'rtcp-video-interval-msec': { value: '5000', disabled: false },
    'rtp-autofix-timing': { value: 'false', disabled: false },
    'rtp-autoflush-during-bridge': { value: 'false', disabled: false },
    'rtp-hold-timeout-sec': { value: '1800', disabled: false },
    'rtp-ip': { value: '$${local_ip_v4}', disabled: false },
    'rtp-rewrite-timestamps': { value: 'true', disabled: false },
    'rtp-timeout-sec': { value: '300', disabled: false },
    'rtp-timer-name': { value: 'soft', disabled: false },
    'send-message-query-on-register': { value: 'true', disabled: false },
    'send-presence-on-register': { value: 'true', disabled: false },
    'session-timeout': { value: '1800', disabled: false },
    'shutdown-on-fail': { value: 'false', disabled: false },
    'sip-capture': { value: 'no', disabled: false },
    'sip-expires-max-deviation': { value: '600', disabled: false },
    'sip-force-expires': { value: '1800', disabled: false },
    'sip-ip': { value: '$${local_ip_v4}', disabled: false },
    'sip-port': { value: '$${internal_sip_port}', disabled: false },
    'sip-trace': { value: 'no', disabled: false },
    'suppress-cng': { value: 'true', disabled: false },
    'timer-T1': { value: '500', disabled: false },
    'timer-T1X64': { value: '32000', disabled: false },
    'timer-T2': { value: '4000', disabled: false },
    'timer-T4': { value: '4000', disabled: false },
    'tls': { value: '$${internal_ssl_enable}', disabled: false },
    'tls-bind-params': { value: 'transport=tls', disabled: false },
    'tls-cert-dir': { value: '$${internal_ssl_dir}', disabled: false },
    'tls-only': { value: 'false', disabled: false },
    'tls-passphrase': { value: '', disabled: false },
    'tls-sip-port': { value: '$${internal_tls_port}', disabled: false },
    'tls-verify-date': { value: 'true', disabled: false },
    'tls-verify-depth': { value: '2', disabled: false },
    'tls-verify-in-subjects': { value: '', disabled: false },
    'tls-verify-policy': { value: 'all|subjects_all', disabled: false },
    'tls-version': { value: '$${sip_tls_version}', disabled: false },
    'track-calls': { value: 'false', disabled: false },
    'unregister-on-options-fail': { value: 'true', disabled: false },
    'user-agent-string': { value: 'DCM', disabled: false },
    'username': { value: 'DCM', disabled: false },
    'vad': { value: 'out', disabled: false },
    'watchdog-enabled': { value: 'no', disabled: false },
    'watchdog-event-timeout': { value: '30000', disabled: false },
    'watchdog-step-timeout': { value: '30000', disabled: false },
    'wss-binding': { value: ':7443', disabled: false },
    'auth-calls': { value: 'true', disabled: false },
    'auth-all-packets': { value: 'false', disabled: false },
    'ext-rtp-ip': { value: '$${external_rtp_ip}', disabled: false }, 
    'ext-sip-ip': { value: '$${external_sip_ip}', disabled: false },
    'inbound-reg-force-matching-username': { value: 'true', disabled: false },
    'presence-hosts': { value: '$${domain}', disabled: false },
    'force-register-domain': { value: '$${domain}', disabled: true },
    'force-subscription-domain': { value: '$${domain}', disabled: true },
    'force-register-db-domain': { value: '$${domain}', disabled: true },
    'ws-binding': { value: ':5066', disabled: false },
    'challenge-realm': { value: 'auto_from', disabled: false },
    'manage-presence': { value: 'true', disabled: false },
    'apply-inbound-acl': { value: 'domains', disabled: false },
    'apply-nat-acl': { value: 'nat.auto', disabled: false },
    'apply-register-acl': { value: 'domains', disabled: true },
    'multiple-registrations': { value: 'contact', disabled: true },
    'auth-subscriptions': { value: 'true', disabled: false },
    'manage-shared-appearance': { value: 'true', disabled: false },
    'dbname': { value: 'share_presence', disabled: true },
    'zrtp-passthru': { value: 'true', disabled: false }, 
    'liberal-dtmf': { value: 'true', disabled: false },
    'minimum-session-expires': { value: '90', disabled: false },
    'nonce-count': { value: '64', disabled: false },
    'inbound-late-negotiation': { value: 'true', disabled: false },
    'local-network-acl': { value: 'localnet.auto', disabled: false },
    'log-auth-failures': { value: 'true', disabled: false },
    'context': { value: 'vogat.lifesprintcare.ca', disabled: false },
    'accept-blind-auth': {value: 'true', disabled: true },
    'accept-blind-reg': { value: 'true', disabled: true },
    'aggressive-nat-detection': { value: 'true', disabled: false },
    'NDLB-force-rport': { value: 'safe', disabled: false },
    'odbc-dsn': { value: '$${dsn}', disabled: false },
};

// Overrides for external profiles
const externalOverrides: { [key: string]: Partial<typeof allSipSettings[0]> } = {
    'debug': { value: '0', disabled: false },
    'dialplan': { value: 'XML', disabled: false },
    'disable-srv503': { value: 'true', disabled: false },
    'dtmf-duration': { value: '2000', disabled: false },
    'dtmf-type': { value: 'rfc2833', disabled: false },
    'enable-100rel': { value: 'true', disabled: false },
    'enable-compact-headers': { value: 'true', disabled: false },
    'enable-rfc-5626': { value: 'true', disabled: false },
    'ext-rtp-ip': { value: '$${external_rtp_ip}', disabled: false },
    'ext-sip-ip': { value: '$${external_sip_ip}', disabled: false },
    'force-register-db-domain': { value: '$${domain}', disabled: true },
    'force-register-domain': { value: '$${domain}', disabled: true },
    'hold-music': { value: '$${hold_music}', disabled: false },
    'inbound-codec-negotiation': { value: 'generous', disabled: false },
    'inbound-codec-prefs': { value: '$${global_codec_prefs}', disabled: false },
    'local-network-acl': { value: 'localnet.auto', disabled: false },
    'manage-presence': { value: 'false', disabled: false },
    'nonce-ttl': { value: '60', disabled: false },
    'odbc-dsn': { value: '$${dsn}', disabled: false },
    'outbound-codec-prefs': { value: '$${outbound_codec_prefs}', disabled: false },
    'presence-hosts': { value: '$${domain}', disabled: false },
    'rfc2833-pt': { value: '101', disabled: false },
    'rtp-hold-timeout-sec': { value: '1800', disabled: false },
    'rtp-ip': { value: '$${local_ip_v4}', disabled: false },
    'rtp-timeout-sec': { value: '300', disabled: false },
    'rtp-timer-name': { value: 'soft', disabled: false },
    'shutdown-on-fail': { value: 'true', disabled: true },
    'sip-capture': { value: 'no', disabled: false },
    'sip-ip': { value: '$${local_ip_v4}', disabled: false },
    'sip-port': { value: '$${external_sip_port}', disabled: false },
    'sip-trace': { value: 'no', disabled: false },
    'suppress-cng': { value: 'true', disabled: false },
    'tls': { value: '$${external_ssl_enable}', disabled: false },
    'tls-bind-params': { value: 'transport=tls', disabled: false },
    'tls-cert-dir': { value: '$${external_ssl_dir}', disabled: false },
    'tls-only': { value: 'false', disabled: false },
    'tls-passphrase': { value: '', disabled: false },
    'tls-sip-port': { value: '$${external_tls_port}', disabled: false },
    'tls-verify-date': { value: 'true', disabled: false },
    'tls-verify-depth': { value: '2', disabled: false },
    'tls-verify-in-subjects': { value: '', disabled: false },
    'tls-verify-policy': { value: 'all|subjects_all', disabled: false },
    'tls-version': { value: '$${sip_tls_version}', disabled: false },
    'track-calls': { value: 'false', disabled: false },
    'user-agent-string': { value: 'DCM', disabled: false },
    'username': { value: 'DCM', disabled: true },
    'zrtp-passthru': { value: 'true', disabled: false },
    'auth-calls': { value: 'false', disabled: false },
    'auth-all-packets': { value: 'false', disabled: false },
    'context': { value: 'public', disabled: false },
    'challenge-realm': { value: 'auto_from', disabled: false },
    'disable-register': { value: 'true', disabled: true },
    'aggressive-nat-detection': { value: 'true', disabled: true },
    'apply-nat-acl': { value: 'nat.auto', disabled: false },
    'apply-inbound-acl': { value: 'domains', disabled: false },
    'stun-enabled': { value: 'true', disabled: true },
    'liberal-dtmf': { value: 'true', disabled: false }, 
    'minimum-session-expires': { value: '90', disabled: false },
    'nonce-count': { value: '64', disabled: false },
    'inbound-late-negotiation': { value: 'true', disabled: false },
    'watchdog-enabled': { value: 'no', disabled: true },
    'max-proceeding': { value: '1000', disabled: false },
};

// Generate all profile settings by applying overrides
export const defaultSipProfileSettings = defaultSipProfiles.flatMap(profile => {
    // Deep clone the base settings to avoid modifying the original array
    const profileSettings = JSON.parse(JSON.stringify(allSipSettings));
    const overrides = profile.name.startsWith('internal') ? internalOverrides :
                      profile.name.startsWith('external') ? externalOverrides : {};

    // Apply overrides
    profileSettings.forEach((setting: any) => {
        if (overrides[setting.name]) {
            Object.assign(setting, overrides[setting.name]);
        }
    });

    // Map the final settings to the full structure expected by Prisma
    return profileSettings.map((setting: any) => ({
        id: randomUUID(),
        sip_profile_id: profile.id,
        name: setting.name,
        value: setting.value,
        disabled: setting.disabled,
        description: '',
        synchronised: new Date(),
        ...SIP_PROFILE_SETTING_DEFAULTS,
    }));
});

// Export full profile data structure
export const defaultSipProfilesFull = defaultSipProfiles.map(profile => ({
    ...profile,
    pbx_sip_profile_domains: defaultSipProfileDomains.filter(
        domain => domain.sip_profile_id === profile.id
    ),
    pbx_sip_profile_settings: defaultSipProfileSettings.filter(
        setting => setting.sip_profile_id === profile.id
    ),
}));